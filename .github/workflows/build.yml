name: Build

on:
  pull_request:
    branches:
      - '*'
      
jobs:
  build:
    name: Build
    strategy:
      # Don't cancel concurrent jobs if one fails
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          # Mostly to avoid GitHub rate limiting
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      # FIXME: results in error: file 'nixpkgs' was not found in the Nix search path (add it using $NIX_PATH or -I)
      # - name: Print nixpkgs version
      #   run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: Cache Nix derivations
        uses: cachix/cachix-action@v12
        with:
          name: garrettmichaelgeorge-public
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community

      # FIXME: requires mix deps.get to be run first to avoid the error:
      # "the dependency is not available, run "mix deps.get""
      # NOTE: this would only work if Elixir is included in the Nix shell
      # - run: nix develop --command mix compile
      #   continue-on-error: true

      - run: nix build .#mix-release

      - run: nix build .#image

      - run: zcat result | docker load
      - run: docker network create live-beats-net
      - run: nix develop --command mix deps.get

      - name: Start Postgres container
        run: |
          docker run \
            --name live-beats-db \
            --publish 5432:5432 \
            --env POSTGRES_PASSWORD=postgres \
            --rm \
            --network live-beats-net \
            --detach \
            postgres

      # TODO: bootstrap Postgres user & run DB migrations inside a proper script
      # and remove Mix dependency
      - run: nix develop --command mix ecto.create
      - run: nix develop --command mix ecto.migrate

      - name: Start app container
        run: |
          docker run \
            --rm \
            --name live-beats \
            --network live-beats-net \
            --env RELEASE_COOKIE=${{ secrets.RELEASE_COOKIE }} \
            --env FLY_APP_NAME=${{ secrets.FLY_APP_NAME }} \
            --env SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }} \
            --env LIVE_BEATS_GITHUB_CLIENT_ID=${{ secrets.LIVE_BEATS_GITHUB_CLIENT_ID }} \
            --env LIVE_BEATS_GITHUB_CLIENT_SECRET=${{ secrets.LIVE_BEATS_GITHUB_CLIENT_SECRET }} \
            --env LIVE_BEATS_SERVER_IP=127.0.0.1 \
            --env PHX_HOST=localhost \
            --env PORT=4000 \
            --env DATABASE_URL=ecto://postgres:postgres@live-beats-db:5432/live_beats_prod \
            --pull never \
            --tty \
            --interactive \
            --publish 4000:4000 \
            --detach \
          live-beats-nix

      # TODO: optimize image size
      # - name: Upload image as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: hello-image
      #     path: result
      #     if-no-files-found: error
      #     retention-days: 10


